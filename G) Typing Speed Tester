import tkinter as tk
import time


class TypingSpeedTester:
    def __init__(self, root):
        self.root = root
        self.root.title("Typing Speed Tester")
        self.root.configure(bg="#f0f0f0")  # Background color

        self.passage = "The quick brown fox jumps over the lazy dog."
        self.passage_words = self.passage.split()

        self.levels = [
            (0, 10, "Beginner"),
            (11, 20, "Novice"),
            (21, 40, "Intermediate"),
            (41, 60, "Skilled"),
            (61, 80, "Proficient"),
            (81, 100, "Expert"),
            (101, 120, "Master"),
            (121, float('inf'), "Typing God")
        ]

        self.timer_running = False
        self.start_time = 0
        self.typed_text = ""

        self.create_widgets()

    def start_timer(self):
        if not self.timer_running:
            self.timer_running = True
            self.start_time = time.time()
            self.update_timer()

    def update_timer(self):
        if self.timer_running:
            elapsed_time = time.time() - self.start_time
            self.timer_label.config(text="Time: {:.2f} seconds".format(elapsed_time))
            self.root.after(100, self.update_timer)

    def check_accuracy(self, event):
        if self.timer_running:
            self.typed_text = self.text_input.get("1.0", "end-1c")
            self.update_compliment()

            typed_words = self.typed_text.split()
            accuracy = sum(1 for typed, passage in zip(typed_words, self.passage_words) if typed == passage) / len(
                self.passage_words)

            if accuracy >= 1.0:
                self.timer_running = False
                elapsed_time = time.time() - self.start_time
                wpm = (len(self.passage_words) / elapsed_time) * 60
                self.show_result(elapsed_time, len(self.passage_words), wpm)

    def show_result(self, elapsed_time, words_typed, wpm):
        self.result_label.config(
            text="Time taken: {:.2f} seconds\nWords typed: {}\nWords per minute (WPM): {:.2f}".format(elapsed_time,
                                                                                                      words_typed, wpm))

        for level in self.levels:
            if level[0] <= wpm <= level[1]:
                self.compliment_label.config(
                    text="Your typing speed level: {}\n{}".format(level[2], self.get_compliment(level[2])))
                break

    def update_compliment(self):
        typed_words = self.typed_text.split()
        wpm = (len(typed_words) / (time.time() - self.start_time)) * 60

        for level in self.levels:
            if level[0] <= wpm <= level[1]:
                self.compliment_label.config(
                    text="Your typing speed level: {}\n{}".format(level[2], self.get_compliment(level[2])))
                break

    def get_compliment(self, level):
        compliments = {
            "Beginner": "Keep practicing! You'll improve with time.",
            "Novice": "Nice effort! You're making progress.",
            "Intermediate": "Great job! Your typing is getting faster.",
            "Skilled": "Impressive! You're becoming quite skilled.",
            "Proficient": "Wow, you're typing like a pro!",
            "Expert": "Excellent work! You're an expert typist.",
            "Master": "Incredible speed! You're a typing master.",
            "Typing God": "Unbelievable! You're a typing god!"
        }
        return compliments.get(level, "")

    def create_widgets(self):
        self.passage_label = tk.Label(self.root, text="Type the following passage:", bg="#f0f0f0",
                                      font=("Helvetica", 14))
        self.passage_label.pack(pady=(20, 5))

        self.passage_text = tk.Label(self.root, text=self.passage, bg="#f0f0f0", font=("Helvetica", 12))
        self.passage_text.pack()

        self.timer_label = tk.Label(self.root, text="Time: 0.00 seconds", bg="#f0f0f0", font=("Helvetica", 12))
        self.timer_label.pack()

        self.text_input = tk.Text(self.root, wrap="word", width=40, height=6, font=("Helvetica", 12))
        self.text_input.pack(pady=10)
        self.text_input.bind("<KeyPress>", lambda event: self.start_timer())
        self.text_input.bind("<KeyRelease>", self.check_accuracy)

        self.result_label = tk.Label(self.root, text="", bg="#f0f0f0", font=("Helvetica", 12, "bold"))
        self.result_label.pack(pady=(10, 20))

        self.compliment_label = tk.Label(self.root, text="", bg="#f0f0f0", font=("Helvetica", 12, "italic"))
        self.compliment_label.pack()


if __name__ == "__main__":
    root = tk.Tk()
    root.geometry("500x500")  # Set the window dimensions
    app = TypingSpeedTester(root)
    root.mainloop()
